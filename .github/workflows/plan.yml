name: Plan

on:
  push:
    branches: ["main"]
    tags-ignore: ["**"]
  workflow_dispatch:

env:
  TF_VAR_github_admin_token: ${{ secrets.ADMIN_GITHUB_TOKEN }}
  TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
  TF_VAR_region: europe-west3
  TF_VAR_backend_deployer_sa_email: ${{ secrets.BACKEND_DEPLOYER_SA_EMAIL }}
  TF_VAR_backend_runtime_sa_email: ${{ secrets.BACKEND_RUNTIME_SA_EMAIL }}
  TF_VAR_terraform_state_bucket: ${{ secrets.TERRAFORM_STATE_BUCKET }}
  TF_VAR_location: "europe-west3"
  TF_VAR_github_api_label_token: ${{ secrets.GH_TOKEN_FOR_LABELING }}
  TF_VAR_workload_identity_provider_name: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
  TF_VAR_workload_identity_pool_id: ${{ secrets.WORKLOAD_IDENTITY_POOL_ID }}
  TF_VAR_codacy_api_token: ${{ secrets.CODACY_API_TOKEN }}
  TF_VAR_docker_registry_username: ""
  TF_VAR_docker_registry_token: ""
  TF_VAR_container_registry: ${{ secrets.CONTAINER_REGISTRY }}
  TF_IN_AUTOMATION: "true"
  TF_INPUT: "false"
  GITHUB_TOKEN: "${{ secrets.ADMIN_GITHUB_TOKEN }}"
  CLOUDSDK_CORE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}

permissions:
  id-token: write

jobs:
  lint:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - uses: terraform-linters/setup-tflint@v2
        name: Setting up TFLint
        with:
          tflint_version: v0.29.0
      - name: Initializing TFLint
        run: tflint --init
      - name: Linting
        run: tflint -f compact --disable-rule=terraform_module_pinned_source

  compliance-scan:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run Checkov action
        id: checkov
        uses: bridgecrewio/checkov-action@v12.1625.0
        with:
          framework: terraform
          # we are fine with Google's Keys
          skip_check: CKV_GCP_84,CKV_GIT_4
          output_format: cli
          download_external_modules: true

  security-scan:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - run: docker run -v ${PWD}:/src aquasec/tfsec:v1.8 /src

  qa:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Authenticating
        uses: google-github-actions/auth@v0.7.0
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.CICD_SA_EMAIL_ADDRESS }}
      - name: Setting up GCP environment
        uses: google-github-actions/setup-gcloud@v0.6.0
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.4.0
      - name: Terraform Init
        run: terraform init -backend-config="bucket=${{ secrets.TERRAFORM_STATE_BUCKET }}"
      - name: Terraform Format
        run: terraform fmt -check -recursive
      - name: Terraform Validate
        run: terraform validate -no-color

  plan:
    needs:
      - qa
      - compliance-scan
      - security-scan
      - lint

    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Authenticating
        uses: google-github-actions/auth@v0.7.0
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.CICD_SA_EMAIL_ADDRESS }}
      - name: Setting up GCP environment
        uses: google-github-actions/setup-gcloud@v0.6.0
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.4.0
      - name: Init
        run: terraform init -backend-config="bucket=${{ secrets.TERRAFORM_STATE_BUCKET }}"
      - name: Plan
        run: terraform plan -no-color
